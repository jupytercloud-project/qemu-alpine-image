{
  "variables": {
    "cpus": "1",
    "mem": "1024",
    "tmp_size": "256M",
    "disk_size": "300",
    "__disk_format": "either qcow2 or raw. qcow2 compaction failed on APFS and since Openstack convert QCOW2 to RAW, make it RAW",
    "disk_format": "raw"
  },
  "builders": [
    {
      "type": "qemu",
      "accelerator": "{{user `qemu_accelerator`}}",
      "cpus": "{{user `cpus`}}",
      "memory": "{{ user `mem`}}",

      "headless": true,
      "qemuargs": [
        [ "-chardev", "socket,id=monitor,path=run/monitor.sock,server,nowait" ],
        [ "-monitor", "chardev:monitor" ],
        [ "-chardev", "socket,id=serial0,path=run/console.sock,server,nowait" ],
        [ "-serial", "chardev:serial0" ],
        [ "-writeconfig", "{{ user `project_directory` }}/run/vm.cfg" ]
      ],

      "vm_name": "{{user `image_name_base`}}-{{user `version`}}.{{user `disk_format`}}",

      "iso_checksum_type": "sha512",
      "iso_checksum": "{{user `sha512`}}",
      "iso_url": "{{user `mirror`}}/alpine/{{user `branch`}}/releases/{{user `arch`}}/{{user `iso`}}",

      "vnc_port_min": "6000",

      "disk_size": "{{user `disk_size`}}",
      "format": "{{user `disk_format`}}",
      "disk_interface": "virtio",
      "disk_compression": false,
      "skip_compaction": true,

      "net_device": "virtio-net",

      "http_directory": "{{user `project_directory`}}/http",

      "boot_command": [
        "<wait20>",
        "root<enter><wait>",
        "ifconfig eth0 up && udhcpc -i eth0<enter><wait5>",
        "wget http://{{ .HTTPIP }}:{{ .HTTPPort }}/alpine-installer.sh -O - | sh -s -- '{{ user `tmp_size`}}' '{{ .HTTPIP }}:{{ .HTTPPort }}' '{{user `mirror`}}'<enter>"
      ],

      "communicator": "ssh",
      "ssh_timeout": "20m",
      "ssh_username": "alpine",
      "ssh_password": "alpine",

      "shutdown_command": "sudo poweroff",
      "shutdown_timeout": "30m"
    }
  ],
  "provisioners": [
    {
      "type": "file",
      "source": "{{user `project_directory`}}/data",
      "destination": "/tmp/"
    },
    {
      "type": "shell",
      "inline": [
        "ls -alFhR /tmp/data"
      ]
    },
    {
      "type": "shell",
      "execute_command": "sudo sh -c '{{ .Path }}'",
      "scripts": [
        "{{user `project_directory`}}/scripts/post-install.sh"
      ]
    }
  ]
}
